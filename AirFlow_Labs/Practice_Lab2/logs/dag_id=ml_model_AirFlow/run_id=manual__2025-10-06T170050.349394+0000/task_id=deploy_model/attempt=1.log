{"timestamp":"2025-10-06T17:01:38.557552Z","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager","filename":"manager.py","lineno":179}
{"timestamp":"2025-10-06T17:01:38.559598Z","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_pipeline.py","logger":"airflow.models.dagbag.DagBag","filename":"dagbag.py","lineno":593}
{"timestamp":"2025-10-06T17:01:40.402084Z","level":"info","event":"Tmp dir root location: /tmp","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":78}
{"timestamp":"2025-10-06T17:01:40.418197Z","level":"info","event":"Running command: ['/usr/bin/bash', '-c', '\\n        echo \"==========================================\"\\n        echo \"DEPLOYING MODEL TO PRODUCTION\"\\n        echo \"==========================================\"\\n        echo \"\"\\n        echo \"Deployment steps:\"\\n        echo \"1. Loading best model configuration...\"\\n        cat /opt/airflow/dags/metrics/best_model.json\\n        echo \"\"\\n        echo \"2. Copying model to production directory...\"\\n        echo \"3. Updating model registry...\"\\n        echo \"4. Running smoke tests...\"\\n        echo \"5. Updating API endpoint...\"\\n        echo \"\"\\n        echo \"✓ Model successfully deployed!\"\\n        echo \"✓ Production endpoint updated\"\\n        echo \"✓ Monitoring enabled\"\\n        echo \"==========================================\"\\n        ']","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":88}
{"timestamp":"2025-10-06T17:01:40.463269Z","level":"info","event":"Output:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":99}
{"timestamp":"2025-10-06T17:01:40.505414Z","level":"info","event":"==========================================","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.505838Z","level":"info","event":"DEPLOYING MODEL TO PRODUCTION","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.505931Z","level":"info","event":"==========================================","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.505975Z","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.506018Z","level":"info","event":"Deployment steps:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.506064Z","level":"info","event":"1. Loading best model configuration...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.519583Z","level":"info","event":"{","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.519826Z","level":"info","event":"  \"model_name\": \"GradientBoosting\",","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.519927Z","level":"info","event":"  \"accuracy\": 0.9666666666666667,","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.519990Z","level":"info","event":"  \"timestamp\": \"2025-10-06T17:01:37.763366\",","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.520084Z","level":"info","event":"  \"all_metrics\": [","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.520155Z","level":"info","event":"    {","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.520211Z","level":"info","event":"      \"recall\": 0.9,","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.520269Z","level":"info","event":"      \"accuracy\": 0.9,","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.520336Z","level":"info","event":"      \"f1_score\": 0.8997493734335839,","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.520405Z","level":"info","event":"      \"precision\": 0.9023569023569024,","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.520444Z","level":"info","event":"      \"model_name\": \"RandomForest\"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.520485Z","level":"info","event":"    },","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.520587Z","level":"info","event":"    {","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.520658Z","level":"info","event":"      \"recall\": 0.9666666666666667,","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.520715Z","level":"info","event":"      \"accuracy\": 0.9666666666666667,","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.520760Z","level":"info","event":"      \"f1_score\": 0.9665831244778613,","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.520801Z","level":"info","event":"      \"precision\": 0.9696969696969696,","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.520843Z","level":"info","event":"      \"model_name\": \"GradientBoosting\"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.520887Z","level":"info","event":"    },","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.520950Z","level":"info","event":"    {","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.521028Z","level":"info","event":"      \"recall\": 0.9333333333333333,","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.521112Z","level":"info","event":"      \"accuracy\": 0.9333333333333333,","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.521168Z","level":"info","event":"      \"f1_score\": 0.9333333333333333,","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.521204Z","level":"info","event":"      \"precision\": 0.9333333333333333,","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.521238Z","level":"info","event":"      \"model_name\": \"LogisticRegression\"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.521272Z","level":"info","event":"    }","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.521305Z","level":"info","event":"  ]","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.521348Z","level":"info","event":"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.521383Z","level":"info","event":"2. Copying model to production directory...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.521419Z","level":"info","event":"3. Updating model registry...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.521455Z","level":"info","event":"4. Running smoke tests...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.521489Z","level":"info","event":"5. Updating API endpoint...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.521523Z","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.521576Z","level":"info","event":"✓ Model successfully deployed!","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.522553Z","level":"info","event":"✓ Production endpoint updated","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.523313Z","level":"info","event":"✓ Monitoring enabled","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.523625Z","level":"info","event":"==========================================","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-06T17:01:40.523811Z","level":"info","event":"Command exited with return code 0","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":110}
{"timestamp":"2025-10-06T17:01:40.525440Z","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0199ba77-ffa0-79a9-b784-2c147c0ba752'), task_id='deploy_model', dag_id='ml_model_AirFlow', run_id='manual__2025-10-06T17:00:50.349394+00:00', try_number=1, dag_version_id=UUID('0199ba67-6c97-756c-afd2-2bef7164578c'), map_index=-1, hostname='aba7ec31dfd6', context_carrier={}, task=<Task(_BashDecoratedOperator): deploy_model>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 10, 6, 17, 1, 38, 302030, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task","filename":"task_runner.py","lineno":1352}
